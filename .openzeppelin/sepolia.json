{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x1BdCf3cBaf18B83514C2d9C22A4c6a5e3a44dFB1",
      "txHash": "0x04cce48d0acdc19459b6bd854a333fdfd421610d5a9fd750eea52f71a8d5398a",
      "kind": "uups"
    },
    {
      "address": "0x5ac5C62D899119FAF21EfA4247bDFD8e85C55268",
      "txHash": "0xfe9723c4d85ad702014c718009440b54e90fa173fd98ce6272e7468329790abd",
      "kind": "uups"
    },
    {
      "address": "0x93f70F0108da39BaAd8CB8F453bf1940256222fD",
      "txHash": "0x5fe6e56a2193feec5453635e15f33bf62eac61025b0ef3d0c364d63178d792f5",
      "kind": "uups"
    },
    {
      "address": "0x4EE725c9332E6d8611283CBa5aa8d5C4c5d20e6D",
      "txHash": "0x3481b96bb58662c8d2dd013f55feaa8218a243f9eac8c8b90ee53392254fbb78",
      "kind": "uups"
    }
  ],
  "impls": {
    "209519aece0eb1db95627aa54e06d297bf9d98398fa019941df3986828a8e01c": {
      "address": "0x4F385427B7876AE086fCA05a4D689786E05782c0",
      "txHash": "0xf000badae27b999284ac0a09179be73c9938f6a4f825ee573f5b7b700c4dbf49",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "priceFeed",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IPriceFeed)6369",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:44"
          },
          {
            "label": "minimumDeposit",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:48"
          },
          {
            "label": "maxDeposit",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:51"
          },
          {
            "label": "minimunTokenDeposit",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:54"
          },
          {
            "label": "supportedTokensSet",
            "offset": 0,
            "slot": "4",
            "type": "t_struct(AddressSet)3828_storage",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:56"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint8)",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:59"
          },
          {
            "label": "totalAssets",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:64"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "8",
            "type": "t_struct(Fee)4784_storage",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:75"
          },
          {
            "label": "totalProfits",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:77"
          },
          {
            "label": "userProfits",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:78"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(UserInfo)4802_storage)",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:87"
          },
          {
            "label": "rewardInfo",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(RewardInfo)4874_storage",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:131"
          },
          {
            "label": "userRewardInfo",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_struct(UserRewardInfo)4881_storage)",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:133"
          },
          {
            "label": "vaultData",
            "offset": 0,
            "slot": "18",
            "type": "t_struct(PackedVaultData)4908_storage",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:140"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)263_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)119_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)59_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)458_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)522_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IPriceFeed)6369": {
            "label": "contract IPriceFeed",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)4802_storage)": {
            "label": "mapping(address => struct Vault.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserRewardInfo)4881_storage)": {
            "label": "mapping(address => struct Vault.UserRewardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)3828_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3513_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Fee)4784_storage": {
            "label": "struct Vault.Fee",
            "members": [
              {
                "label": "depositFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "managementFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PackedVaultData)4908_storage": {
            "label": "struct Vault.PackedVaultData",
            "members": [
              {
                "label": "lastUpdateTime",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cooldownPeriod",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "totalAssets",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RewardInfo)4874_storage": {
            "label": "struct Vault.RewardInfo",
            "members": [
              {
                "label": "rewardPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)3513_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)4802_storage": {
            "label": "struct Vault.UserInfo",
            "members": [
              {
                "label": "depositCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalDeposited",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastDepositTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isWhitelisted",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(UserRewardInfo)4881_storage": {
            "label": "struct Vault.UserRewardInfo",
            "members": [
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pending",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRewardPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "5c82e2fb41f459d471a15fbef325b3ac4938ec05f703ba3c5ba930a4a966e023": {
      "address": "0xF1578642bEa5090A0Fb378A7874C2a9F15183a5F",
      "txHash": "0x13dab7f2cc8f50c4ea35fa3d72a76d76af1d420f100922e67ffc7bbddea3dbaa",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "priceFeed",
            "offset": 0,
            "slot": "0",
            "type": "t_contract(IPriceFeed)14892",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:49"
          },
          {
            "label": "minimumDeposit",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:53"
          },
          {
            "label": "maxDeposit",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:56"
          },
          {
            "label": "minimunTokenDeposit",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:59"
          },
          {
            "label": "supportedTokensSet",
            "offset": 0,
            "slot": "4",
            "type": "t_struct(AddressSet)8992_storage",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:61"
          },
          {
            "label": "tokenDecimals",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_uint8)",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:64"
          },
          {
            "label": "totalAssets",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:69"
          },
          {
            "label": "fees",
            "offset": 0,
            "slot": "8",
            "type": "t_struct(Fee)13122_storage",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:80"
          },
          {
            "label": "totalProfits",
            "offset": 0,
            "slot": "11",
            "type": "t_uint256",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:82"
          },
          {
            "label": "userProfits",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:83"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "13",
            "type": "t_mapping(t_address,t_struct(UserInfo)13140_storage)",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:92"
          },
          {
            "label": "rewardInfo",
            "offset": 0,
            "slot": "14",
            "type": "t_struct(RewardInfo)13228_storage",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:139"
          },
          {
            "label": "userRewardInfo",
            "offset": 0,
            "slot": "17",
            "type": "t_mapping(t_address,t_struct(UserRewardInfo)13235_storage)",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:141"
          },
          {
            "label": "vaultData",
            "offset": 0,
            "slot": "18",
            "type": "t_struct(PackedVaultData)13262_storage",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:155"
          },
          {
            "label": "accessControl",
            "offset": 0,
            "slot": "19",
            "type": "t_contract(IAccessControl)15033",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:161"
          },
          {
            "label": "governance",
            "offset": 0,
            "slot": "20",
            "type": "t_address",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:163"
          },
          {
            "label": "strategy",
            "offset": 0,
            "slot": "21",
            "type": "t_address",
            "contract": "Vault",
            "src": "contracts\\dao\\Vault.sol:163"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC20Storage)401_storage": {
            "label": "struct ERC20Upgradeable.ERC20Storage",
            "members": [
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_allowances",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_totalSupply",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_struct(InitializableStorage)257_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)197_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)596_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)660_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IAccessControl)15033": {
            "label": "contract IAccessControl",
            "numberOfBytes": "20"
          },
          "t_contract(IPriceFeed)14892": {
            "label": "contract IPriceFeed",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)13140_storage)": {
            "label": "mapping(address => struct Vault.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserRewardInfo)13235_storage)": {
            "label": "mapping(address => struct Vault.UserRewardInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint8)": {
            "label": "mapping(address => uint8)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)8992_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)8677_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Fee)13122_storage": {
            "label": "struct Vault.Fee",
            "members": [
              {
                "label": "depositFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "withdrawFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "managementFee",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(PackedVaultData)13262_storage": {
            "label": "struct Vault.PackedVaultData",
            "members": [
              {
                "label": "lastUpdateTime",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "cooldownPeriod",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "totalAssets",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RewardInfo)13228_storage": {
            "label": "struct Vault.RewardInfo",
            "members": [
              {
                "label": "rewardPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalRewards",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_struct(Set)8677_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)13140_storage": {
            "label": "struct Vault.UserInfo",
            "members": [
              {
                "label": "depositCount",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "totalDeposited",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastDepositTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "isWhitelisted",
                "type": "t_bool",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(UserRewardInfo)13235_storage": {
            "label": "struct Vault.UserRewardInfo",
            "members": [
              {
                "label": "rewardDebt",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "pending",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "lastRewardPerShare",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ERC20": [
            {
              "contract": "ERC20Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:33",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_allowances",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:35",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_totalSupply",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:37",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:39",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC20Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC20\\ERC20Upgradeable.sol:40",
              "offset": 0,
              "slot": "4"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "9cb69c1c1d46d78fcba2155591e0368ad0c4f365a057002ac85029352f2aa000": {
      "address": "0xC309479D51a2Af18Aa0EcA04B43E5f2E45755Fe6",
      "txHash": "0x5ea59476e67fe7dbf1a74a5276f522ea1750b1cca5f6e7d6982fbe5831ce39bd",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "vault",
            "offset": 0,
            "slot": "0",
            "type": "t_address",
            "contract": "Strategy",
            "src": "contracts\\dao\\Strategy.sol:55"
          },
          {
            "label": "router",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IUniswapV2Router02)3321",
            "contract": "Strategy",
            "src": "contracts\\dao\\Strategy.sol:57"
          },
          {
            "label": "slippageTolerance",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256",
            "contract": "Strategy",
            "src": "contracts\\dao\\Strategy.sol:57"
          },
          {
            "label": "DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes32",
            "contract": "Strategy",
            "src": "contracts\\dao\\Strategy.sol:58"
          },
          {
            "label": "supportedTokens",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_bool)",
            "contract": "Strategy",
            "src": "contracts\\dao\\Strategy.sol:59"
          },
          {
            "label": "tokenStrategies",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_struct(PackedStrategy)3424_storage)",
            "contract": "Strategy",
            "src": "contracts\\dao\\Strategy.sol:61"
          },
          {
            "label": "timeLocks",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_bytes32,t_uint256)",
            "contract": "Strategy",
            "src": "contracts\\dao\\Strategy.sol:62"
          },
          {
            "label": "_supportedTokensSet",
            "offset": 0,
            "slot": "7",
            "type": "t_struct(AddressSet)2638_storage",
            "contract": "Strategy",
            "src": "contracts\\dao\\Strategy.sol:288"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_struct(InitializableStorage)73_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)13_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)219_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)283_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]",
            "numberOfBytes": "32"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IUniswapV2Router02)3321": {
            "label": "contract IUniswapV2Router02",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(PackedStrategy)3424_storage)": {
            "label": "mapping(address => struct Strategy.PackedStrategy)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(AddressSet)2638_storage": {
            "label": "struct EnumerableSet.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)2323_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(PackedStrategy)3424_storage": {
            "label": "struct Strategy.PackedStrategy",
            "members": [
              {
                "label": "targetPercentage",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "rebalanceThreshold",
                "type": "t_uint64",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "lastUpdateTime",
                "type": "t_uint64",
                "offset": 24,
                "slot": "0"
              },
              {
                "label": "swapPath",
                "type": "t_address",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Set)2323_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_positions",
                "type": "t_mapping(t_bytes32,t_uint256)",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    },
    "679ad399b7e0838743e380c085fe5b55f221a93d6db956c7bd4b5a4326473ab3": {
      "address": "0xD9a2d7545f838AA85eC427C2bB9F053357c55561",
      "txHash": "0x21855a0a54c9f0ee1012fa39e87bc230fdfd51397a26b9261d659d5d0ab47cc1",
      "layout": {
        "solcVersion": "0.8.22",
        "storage": [
          {
            "label": "_proposalCores",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_uint256,t_struct(ProposalCore)9961_storage)",
            "contract": "Governance",
            "src": "contracts\\dao\\Governance.sol:82"
          },
          {
            "label": "proposals",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_uint256,t_struct(Proposal)9950_storage)",
            "contract": "Governance",
            "src": "contracts\\dao\\Governance.sol:85"
          },
          {
            "label": "governanceToken",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IERC20)3287",
            "contract": "Governance",
            "src": "contracts\\dao\\Governance.sol:86"
          },
          {
            "label": "proposalCount",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256",
            "contract": "Governance",
            "src": "contracts\\dao\\Governance.sol:88"
          },
          {
            "label": "votingDelay",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256",
            "contract": "Governance",
            "src": "contracts\\dao\\Governance.sol:89"
          },
          {
            "label": "votingPeriod",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256",
            "contract": "Governance",
            "src": "contracts\\dao\\Governance.sol:90"
          },
          {
            "label": "quorumVotes",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256",
            "contract": "Governance",
            "src": "contracts\\dao\\Governance.sol:93"
          },
          {
            "label": "delegates",
            "offset": 0,
            "slot": "7",
            "type": "t_mapping(t_address,t_address)",
            "contract": "Governance",
            "src": "contracts\\dao\\Governance.sol:95"
          },
          {
            "label": "delegatedPower",
            "offset": 0,
            "slot": "8",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Governance",
            "src": "contracts\\dao\\Governance.sol:98"
          },
          {
            "label": "proposalTimelocks",
            "offset": 0,
            "slot": "9",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "Governance",
            "src": "contracts\\dao\\Governance.sol:107"
          },
          {
            "label": "DOMAIN_SEPARATOR",
            "offset": 0,
            "slot": "10",
            "type": "t_bytes32",
            "contract": "Governance",
            "src": "contracts\\dao\\Governance.sol:110"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)70_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(AccessControlStorage)80_storage": {
            "label": "struct AccessControlUpgradeable.AccessControlStorage",
            "members": [
              {
                "label": "_roles",
                "type": "t_mapping(t_bytes32,t_struct(RoleData)70_storage)",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(EIP712Storage)723_storage": {
            "label": "struct EIP712Upgradeable.EIP712Storage",
            "members": [
              {
                "label": "_hashedName",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_hashedVersion",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_version",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_struct(InitializableStorage)257_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(OwnableStorage)197_storage": {
            "label": "struct OwnableUpgradeable.OwnableStorage",
            "members": [
              {
                "label": "_owner",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(PausableStorage)596_storage": {
            "label": "struct PausableUpgradeable.PausableStorage",
            "members": [
              {
                "label": "_paused",
                "type": "t_bool",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(ReentrancyGuardStorage)660_storage": {
            "label": "struct ReentrancyGuardUpgradeable.ReentrancyGuardStorage",
            "members": [
              {
                "label": "_status",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)70_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "hasRole",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_array(t_bytes_storage)dyn_storage": {
            "label": "bytes[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bytes_storage": {
            "label": "bytes",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20)3287": {
            "label": "contract IERC20",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(Proposal)9950_storage)": {
            "label": "mapping(uint256 => struct Governance.Proposal)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(ProposalCore)9961_storage)": {
            "label": "mapping(uint256 => struct Governance.ProposalCore)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(Proposal)9950_storage": {
            "label": "struct Governance.Proposal",
            "members": [
              {
                "label": "proposer",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "targets",
                "type": "t_array(t_address)dyn_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "values",
                "type": "t_array(t_uint256)dyn_storage",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "calldatas",
                "type": "t_array(t_bytes_storage)dyn_storage",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "startBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "endBlock",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              },
              {
                "label": "forVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "6"
              },
              {
                "label": "againstVotes",
                "type": "t_uint256",
                "offset": 0,
                "slot": "7"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 0,
                "slot": "8"
              },
              {
                "label": "canceled",
                "type": "t_bool",
                "offset": 1,
                "slot": "8"
              },
              {
                "label": "eta",
                "type": "t_uint256",
                "offset": 0,
                "slot": "9"
              },
              {
                "label": "description",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "10"
              },
              {
                "label": "hasVoted",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "11"
              }
            ],
            "numberOfBytes": "384"
          },
          "t_struct(ProposalCore)9961_storage": {
            "label": "struct Governance.ProposalCore",
            "members": [
              {
                "label": "startBlock",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endBlock",
                "type": "t_uint32",
                "offset": 4,
                "slot": "0"
              },
              {
                "label": "eta",
                "type": "t_uint64",
                "offset": 8,
                "slot": "0"
              },
              {
                "label": "executed",
                "type": "t_bool",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "canceled",
                "type": "t_bool",
                "offset": 17,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.AccessControl": [
            {
              "contract": "AccessControlUpgradeable",
              "label": "_roles",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)70_storage)",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Ownable": [
            {
              "contract": "OwnableUpgradeable",
              "label": "_owner",
              "type": "t_address",
              "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:24",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.Pausable": [
            {
              "contract": "PausableUpgradeable",
              "label": "_paused",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\PausableUpgradeable.sol:21",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.ReentrancyGuard": [
            {
              "contract": "ReentrancyGuardUpgradeable",
              "label": "_status",
              "type": "t_uint256",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\ReentrancyGuardUpgradeable.sol:43",
              "offset": 0,
              "slot": "0"
            }
          ],
          "erc7201:openzeppelin.storage.EIP712": [
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedName",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:39",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_hashedVersion",
              "type": "t_bytes32",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:41",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:43",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "EIP712Upgradeable",
              "label": "_version",
              "type": "t_string_storage",
              "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\EIP712Upgradeable.sol:44",
              "offset": 0,
              "slot": "3"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
